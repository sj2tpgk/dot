set -g default-shell /bin/sh

# Seems "setenv -g" does not affect variables within .tmux.conf (but do affect in child proc)
%if "#{?TMUX_CONF,,a}"
    TMUX_CONF="$HOME/.tmux.conf"
%endif
%if "#{?TMUX_CONF_LOCAL,,a}"
    TMUX_CONF_LOCAL="$HOME/.tmux.conf.local"
%endif

if "if [ -n '#{TMUX_SHELL}' ]; then [ fish = '#{TMUX_SHELL}' ]; else command -v fish >/dev/null; fi" {
    set -g default-command 'exec fish -C "function conf; sed \"0,/^#===\$argv[1]/d;/^#===/Q;s/^###//\" \"'"$TMUX_CONF"'\"; end; conf fish | source"' # exec needed? to change cwd of pane process
} {
    set -g default-command 'd=$(mktemp -d "$PREFIX"/tmp/tmux-temp-conf-XXXXXX); sed "0,/^#===inputrc/d;/^#===/Q;s/^###//" '"$TMUX_CONF"' > "$d/1"; sed "0,/^#===bash/d;/^#===/Q;s/^###//" '"$TMUX_CONF"' > "$d/2"; INPUTRC="$d/1" bash --init-file "$d/2"; rm "$d/1" "$d/2"; rmdir "$d"'
}

set -g escape-time 0
set -g mouse       on

set -g status-position    top
set -g status-left        '[#S] '
set -g status-left-length 4
set -g status-right       '#{s#^'$HOME'#~#;s#/\$##;s#([-._]*[^/])[^/]*/#\1/#g:pane_current_path} [#{s/^(..)...*(..)$/\1.\2/:user}@#{s/^(..)...*(..)$/\1.\2/:host}]'

bind    '"' split-window -vc "#{pane_current_path}"
bind    s   split-window -vc "#{pane_current_path}"
bind    %   split-window -hc "#{pane_current_path}"
bind    v   split-window -hc "#{pane_current_path}"
bind    w   new-window   -c  "#{pane_current_path}"
bind    r   source "$TMUX_CONF" \; display "Reloaded .tmux.conf"
bind -r o   select-pane -t :.+
bind -r n   next-window
bind -n F3  next-window
bind -n F4  select-pane -t :.+


%if ''
#===fish
set -x PATH $PATH:/data/data/com.termux/files/home/bin/
function fish_greeting; end
command -v nvim    >/dev/null && alias nv 'nvim -u (conf vim | psub)'
command -v vim     >/dev/null && alias v  'vim  -u (conf vim | psub)'
command -v ranger  >/dev/null && alias ra ranger
function mkcd; mkdir $argv[1] && cd $argv[1]; end
set fish_color_autosuggestion 'magenta'
for i in f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12; bind -k $i ""; end
for i in \e\[25\;2~ \e\[26\;5~; bind $i ""; end


#===vim
" vim "
if filereadable($VIMRUNTIME . "/defaults.vim") | source $VIMRUNTIME/defaults.vim | endif
set nocp sm hid
syntax on| filetype on| filetype plugin indent on
###set ls=2 stl=%<[%{&readonly?'R':''}%{&modified?'+':'-'}]\ \ %f%*%=%-10.(%l,%c%V%)\ %y%6.(%P%)
" neovim "
set et ai sw=4 ts=4 sr mouse=av so=1 siso=5 tw=0 nu sb spr cf acd wic ic scs is hls ttm=0 t_Co=16 paste
nn Q :q<cr>| ino <s-f13> <nop>| ino <c-f14> <nop>| nn D dd| nn Y yy| nn ss :sp<cr>| nn sv :vsp<cr>| nn sb :bd<cr>| nn so <c-w>o| nn :<cr> :wa<cr>| nn <a-j> J| nn - <c-w>w| nnore + :tabnext<cr>| nn > >>| nn <lt> <lt><lt>| nn U <c-r>
no j gj| no k gk| no gj j| no gk k| no J <c-d>| no K <c-u>| no h h| no l l| no gh 0| no gl <end>| no i i| no I I| no si s| no n n| no N N| no e e| no E E| ono e e| ono E E| ono h 0| ono l $| ono iw iw| ono iW iW
if $MYKBD == "colemakdh" | no n gj| no e gk| no gn j| no ge k| no N <c-d>| no E <c-u>| no k h| no i l| no gk 0| no gi <end>| no l i| no L I| no sl s| no j n| no J N| no h e| no H E| ono h e| ono H E| ono k 0| ono i $| ono lw iw| ono lW iW| endif
###ono m %|nn m %
exe "au InsertEnter * set cul"| exe "au InsertLeave * set nocul"


#===inputrc
Tab:    menu-complete
"\e[Z": complete
"\C-w": shell-backward-kill-word
"\e[A": history-search-backward
"\e[B": history-search-forward
set show-all-if-ambiguous on        # Tab -> partial completion and show candidates
set show-all-if-unmodified on       #
set colored-stats on                # Color files by types
set visible-stats on                # Append char to indicate type
set mark-symlinked-directories on   # Mark symlinked directories
set colored-completion-prefix on    # Color the common prefix
set menu-complete-display-prefix on # Color the common prefix in menu-complete
set echo-control-characters off     # Don't show ^C etc.
set enable-bracketed-paste off      # Workaround (https://github.com/hanslub42/rlwrap/issues/108)
set completion-ignore-case on       # Case insensitive completion


#===bash
conf() { sed "0,/^#===$1/d;/^#===/Q;s/^###//" "$TMUX_CONF"; }
command -v nvim >/dev/null && nv() { nvim -u <(conf vim) "$@"; }
command -v vim  >/dev/null && v()  { vim  -u <(conf vim) "$@"; }
_exitstatus() { local s=$?; [[ $s == 0 ]] && echo "" || echo -e "\e[31m$s\e[0m "; }
###_CYAN="\[\e[36m\]"; _RESET="\[$(tput sgr0)\]"
###export PS1="$_CYAN\w$_RESET \$(_exitstatus)>>> "
mkcd() { mkdir "$1" && cd "$1"; }
alias la='ls -la'


#===
%endif


if-shell "test -f '$TMUX_CONF_LOCAL'" { source $TMUX_CONF_LOCAL }
