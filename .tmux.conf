## Environment specific settings should be done in MY_TMUX_CONF_LOCAL

### Variables {{{
MY_TMUX_PREFIX=C-b
MY_TMUX_SHELL=/usr/bin/bash
MY_TMUX_CONF="$HOME/.tmux.conf"
MY_TMUX_CONF_LOCAL="$HOME/.tmux.conf.local"
## }}}

### Key bindings {{{
bind -n Â©     select-pane -t :.+
## Session
bind    e     choose-session
## Window
bind    w     choose-window
bind    b     next-window
bind    d     previous-window
bind    n     new-window -c "#{pane_current_path}"
bind    1     select-window -t 1
bind    2     select-window -t 2
bind    3     select-window -t 3
bind    4     select-window -t 4
bind    5     select-window -t 5
bind    m     new-window -c "#{pane_current_path}" sh -c ranger
## Pane
bind    a     select-pane -t :.+
bind    s     split-window -vc "#{pane_current_path}"
bind    v     split-window -hc "#{pane_current_path}"
bind    o     rotate-window
bind -r h     resize-pane -L 1
bind -r j     resize-pane -D 1
bind -r k     resize-pane -U 1
bind -r l     resize-pane -R 1

## }}}
## Titlebar (of window manager) {{{
set -g set-titles on
set -g set-titles-string "#S : #T" # #{=5:window_name}

## }}}
## Status bar {{{
set -g status-left "[#S] "
set -g status-left-length 20
set -g status-right "#[fg=cyan]#(echo #{pane_current_path} | sed 's#$HOME#~#g')#[default] "#"#{pane_current_path} [#W]"
set -g status-justify left
set -g status-position top
set -g window-status-current-style fg=yellow
set -g window-status-last-style    fg=white
set -g window-status-format " #I#F#W " # #I:#W#F
set -g window-status-current-format "#[bg=green]#[fg=black]#[bold] #I#F#W "
set -g status on

set -g status-style "fg=white,bg=#3344aa"

set -g message-style "fg=yellow,bg=black"

## }}}
## Pane border {{{
set -g pane-border-style "fg=blue,bg=default"
set -g pane-active-border-style "fg=yellow,bg=default"

## }}}
## Prefix {{{
unbind C-b
unbind $MY_TMUX_PREFIX
set -g prefix $MY_TMUX_PREFIX
bind $MY_TMUX_PREFIX send-prefix

## }}}
## Default shell {{{
set -g default-shell "$MY_TMUX_SHELL"
set -g default-command "$MY_TMUX_SHELL"

## }}}
## Reload .tmux.conf {{{
bind r source-file "$MY_TMUX_CONF" \; display "Reloaded $MY_TMUX_CONF"

## }}}
## Misc {{{
set  -g escape-time 0       # no delay on Esc
set  -g mouse on
set  -g display-time 2200   # status msg duration
set  -g base-index 1        # start window index from 1
setw -g pane-base-index 1   # start pane index from 1

# Default terminal / enable cursor style changing. {{{
# I don't fully understand what's happening.
# Ss=xxx seems to tell tmux to convert xxx as cursor-changing command...
set -g default-terminal "screen-256color"
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
# Description on Ss and Se: https://invisible-island.net/xterm/terminfo.html
# Workaround1: https://www.reddit.com/r/neovim/comments/7jv6x1/tmux_issue_guicursor_permanently_modifies_cursor/
# Issue is tmux+nvim: https://github.com/neovim/neovim/issues/5096
# }}}

## }}}
### Copy mode (and some copy/paste bindings) {{{
set -g mode-keys vi
bind c copy-mode
bind -T copy-mode-vi Escape send-keys -X cancel

## Drag in copy-mode ==> copy
bind -T copy-mode-vi mousedragend1pane send-keys y
bind -T copy-mode-vi mousedragend3Pane send-keys y

## Press y ==> copy selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"

## Press up/down keys ==> scroll
bind -T copy-mode-vi Up send-keys -X scroll-up
bind -T copy-mode-vi Down send-keys -X scroll-down

## Scroll multiple lines with mouse at once
bind -n WheelUpPane if-shell -Ft= "#{mouse_any_flag}" "send-keys -M" \
  "if-shell -Ft= '#{pane_in_mode}' 'send-keys H; send-keys 4 k' 'select-pane -t =; copy-mode -e'"
bind -n WheelDownPane if-shell -Ft= "#{mouse_any_flag}" "send-keys -M" \
  "if-shell -Ft= \"#{pane_in_mode}\" \"if-shell -t= 'test #{scroll_position} -eq 0 -a #{cursor_y} -ge $(expr #{pane_height} - 1)' 'send-keys q' 'send-keys L; send-keys 4 j'\""

## (No copy mode) Mouse right click ==> paste
bind -n mousedown3pane run "xsel -o | tmux load-buffer - ; tmux paste-buffer"
bind -n mousedrag3pane if-shell -F -t = "#{mouse_any_flag}" "if -Ft= \"#{pane_in_mode}\" \"copy-mode -m\" \"send-keys -m\"" "copy-mode -m"

## (No copy mode) Press p key ==> paste
bind p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

# }}}
## Lock {{{
bind    L     lock-client
set -g lock-after-time 0
set -g lock-command asciiquarium

## }}}

## Load local configuration {{{
if-shell "test -f $MY_TMUX_CONF_LOCAL" "source-file $MY_TMUX_CONF_LOCAL" ""
## }}}
## Notes about local configuration file {{{

# To set secondary prefix key:
#   MY_TMUX_PREFIX2=key
#   unbind MY_TMUX_PREFIX2
#   set -g prefix2 MY_TMUX_PREFIX2
#   bind MY_TMUX_PREFIX2 send-prefix -2

# To change shell:
#   MY_TMUX_SHELL=/path/to/shell
#   set -g default-shell "$MY_TMUX_SHELL"
#   set -g default-command "$MY_TMUX_SHELL"

# }}}

## Notes about tmux {{{

# Session : can be attached and dettached
# Window  : look like tabs
# Pane    : part of window

# 'bind' is an alias for bind-key

# pane-border-fg etc. is replaced by the similar vars like pane-border-style

# how about using send-keys to input ->

# }}}
