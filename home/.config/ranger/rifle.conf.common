# vim: ft=cfg


# Priority (higher to lower, see rc.py):
#    os.path.join(confdir, "rifle.conf.local"),
#    os.path.join(confdir, "rifle.conf.common"),
#    "/usr/share/doc/ranger/config/rifle.conf",


# Media
mime ^video|audio|ogg$, has mpv, X, flag f = mpv --geometry=58%x58%+50%+50% --force-window --sub=1 -- "$@"
mime ^video|audio|ogg$, has ffprobe = ffprobe -- "$@"; read x
mime ^image, !ext svg, has sxiv, X, flag f = sxiv -A1 -- "$@"

# Text files
ext x?html?, has firefox, X, flag f = firefox -- "$@"
mime ^text, label editor = ${VISUAL:-$EDITOR} -- "$@"
ext org = ${VISUAL:-$EDITOR} -- "$@"
mime ^text, has leafpad, X, flag f = leafpad -- "$@"
mime ^text, has mousepad, X, flag f = mousepad -- "$@"
ext pdf, has qpdfview, X, flag f = wmctrl -x -a qpdfview; qpdfview --unique -- "$@"

# Archives
ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  has atool = atool --list --each -- "$@" | "$PAGER"
ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --list --each -- "$@" | "$PAGER"
ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  has atool = atool --extract --each -- "$@"
ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --extract --each -- "$@"
ext zip, has unar  = unar "$1" # zip (better filenames handling win & japanese)
ext zip, has unzip = unzip "$1"
ext tar|tgz|gz|bz2|xz, has tar = tar -xf "$1"

# Media fallback to web browsers
mime ^video|audio|ogg|image|application/pdf, has firefox, X, flag f = firefox -- "$@"
mime ^video|audio|ogg|image|application/pdf, has chromium, X, flag f = chromium -- "$@"

# Json
ext json = ${VISUAL:-$EDITOR} -- "$@"
ext json = jq . "$1"; read x
ext json, has tmux-capture-window = tmux-capture-window -e -l "$1"; read x

# WSL
has cmd.exe = echo "$@" | sed -e 's;/mnt/\(.\);\1:;' -e 's;/home/[^/]*;c:;' -e 's/.*/"&"/' -e 's:/:\\:g' | xargs cmd.exe /C start ""


# This is the configuration file of "rifle", ranger's file executor/opener.
# Each line consists of conditions and a command.  For each line the conditions
# are checked and if they are met, the respective command is run.
#
# Syntax:
#   <condition1> , <condition2> , ... = command
#
# The command can contain these environment variables:
#   $1-$9 | The n-th selected file
#   $@    | All selected files
#
# If you use the special command "ask", rifle will ask you what program to run.
#
# Prefixing a condition with "!" will negate its result.
# These conditions are currently supported:
#   match <regexp> | The regexp matches $1
#   ext <regexp>   | The regexp matches the extension of $1
#   mime <regexp>  | The regexp matches the mime type of $1
#   name <regexp>  | The regexp matches the basename of $1
#   path <regexp>  | The regexp matches the absolute path of $1
#   has <program>  | The program is installed (i.e. located in $PATH)
#   env <variable> | The environment variable "variable" is non-empty
#   file           | $1 is a file
#   directory      | $1 is a directory
#   number <n>     | change the number of this command to n
#   terminal       | stdin, stderr and stdout are connected to a terminal
#   X              | A graphical environment is available (darwin, Xorg, or Wayland)
#
# There are also pseudo-conditions which have a "side effect":
#   flag <flags>  | Change how the program is run. See below.
#   label <label> | Assign a label or name to the command so it can
#                 | be started with :open_with <label> in ranger
#                 | or `rifle -p <label>` in the standalone executable.
#   else          | Always true.
#
# Flags are single characters which slightly transform the command:
#   f | Fork the program, make it run in the background.
#     |   New command = setsid $command >& /dev/null &
#   r | Execute the command with root permissions
#     |   New command = sudo $command
#   t | Run the program in a new terminal.  If $TERMCMD is not defined,
#     | rifle will attempt to extract it from $TERM.
#     |   New command = $TERMCMD -e $command
# Note: The "New command" serves only as an illustration, the exact
# implementation may differ.
# Note: When using rifle in ranger, there is an additional flag "c" for
# only running the current file even if you have marked multiple files.

