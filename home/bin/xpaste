#!/bin/sh

# t() { mil=$(expr $(date +%N) / 10000000); date "+%S.$mil"; }
t() { :; }
t

# WSL helpers
# TODO still slow

wsl_name=pwsh-paste-daemon
wsl_out=/tmp/pwshpaste
wsl_daemon() { while true; do sleep 1000; done | powershell.exe "\$a='$wsl_name';while(1){Read-Host;Get-Clipboard;}" | cat > "$wsl_out"; } # spawns a daemon that outputs clipboard content to $wsl_out when something is written in stdin. if powershell.exe process is alone, we cannot write to its stdin via /proc/.../fd/0. replacing "while..sleep..done" with "cat" works in terminal, but not in script (infinite loop).
wsl_pid() { pgrep -f "$wsl_name"; }
wsl_tr() { tr -d '' | head -c -1; } # fix CRLF, and remove trailing newline
wsl_enc() { # fix encoding: accepts utf-8 or shift-jis and writes utf-8
    wsl_enc_in=/tmp/wslenctmp1
    wsl_enc_out=/tmp/wslenctmp2
    cat > "$wsl_enc_in"
    if iconv -f utf-8 -t utf-8 <"$wsl_enc_in" >"$wsl_enc_out" 2>/dev/null; then
        cat "$wsl_enc_out"
    elif iconv -f shift-jis -t utf-8 <"$wsl_enc_in" >"$wsl_enc_out" 2>/dev/null; then
        cat "$wsl_enc_out"
    else
        cat "$wsl_enc_in"
    fi
}
wsl_paste() {

    # Simple
    # powershell.exe -command Get-Clipboard | iconv -f shift-jis -f utf-8 | tr -d ''; exit

    # https://stackoverflow.com/a/5380763
    # t
    pid=$(wsl_pid)
    # echo "pid=$wsl_pid"
    # t
    if [ -z "$pid" ]; then
        # start daemon
        wsl_daemon &
        # for some reason. telling the daemon to output clipboard fails here.
        powershell.exe Get-Clipboard | wsl_tr | wsl_enc
    else
        echo -n > "$wsl_out"      # erase $wsl_out contents
        echo > "/proc/$pid/fd/0"  # tell daemon to output clipboard content
        sleep .1                  # wait until daemon finishes writing
        # read from "$wsl_out" (but ignore first two lines)
        tail -n +3 "$wsl_out" | wsl_tr | wsl_enc
    fi
    # t

}


# Main program

if [ -n "${IS_WSL}${WSL_DISTRO_NAME}${WSL_INTEROP}${WSL_ENV}" ]; then # wsl
    cd /
    wsl_paste

elif command -v xclip > /dev/null; then # xorg
    xclip -selection clipboard -o

fi
t
