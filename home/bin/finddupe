#!/bin/sh

usage () {
    echo -e "Usage: ./finddupe [options...] [directory]"
    echo -e "Options:"
    echo -e "    -l      list unnecessary files"
    echo -e "    -h      print help"
}

lflag=0
if [ "$1" = -h ]; then usage; exit; fi
if [ "$1" = -l ]; then lflag=1; shift; fi

dir=${1:-.}


# f output lines of the form "<hash>  <file>"
# f(){ find "$dir" -type f | while read f; do xxhsum "$f"; done; }
# f(){ find "$dir" -type f | while read f; do md5sum "$f"; done; }
# f(){ find "$dir" -type f | while read f; do cksum "$f"; done | cut -d' ' -f2 --complement; }
f(){ du -ab "$dir"; }

# detect dupes in f's output
# $h=hash, $l=prev line, $x=to avoid dup line on >=3 consequtive matches
g(){ sort | perl -nae 'BEGIN{$h=-1;$l=""}if($h eq $F[0]){print $l if $x;$x=0;print}else{$x=1}$l=$_;$h=$F[0]'; }

# in output of g, print except first
r(){ perl -nae 'BEGIN{$h=-1}if($h eq $F[0]){print}$h=$F[0]'; }

# f | g

# first by size (fast), then hash
if [ $lflag -eq 1 ]; then
    f | g | cut -f2 | while read f1; do xxhsum "$f1"; done | g | r
else
    f | g | cut -f2 | while read f1; do xxhsum "$f1"; done | g
fi
