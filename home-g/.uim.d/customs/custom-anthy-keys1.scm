(define anthy-next-segment-key '("<IgnoreCase><Control>f" "tab"))
(define anthy-next-segment-key? (make-key-predicate '("<IgnoreCase><Control>f" "tab")))
(define anthy-prev-segment-key '("<IgnoreCase><Control>b" "<Shift>tab"))
(define anthy-prev-segment-key? (make-key-predicate '("<IgnoreCase><Control>b" "<Shift>tab")))
(define anthy-extend-segment-key '("<IgnoreCase><Control>o" "right"))
(define anthy-extend-segment-key? (make-key-predicate '("<IgnoreCase><Control>o" "right")))
(define anthy-shrink-segment-key '("<IgnoreCase><Control>i" "left"))
(define anthy-shrink-segment-key? (make-key-predicate '("<IgnoreCase><Control>i" "left")))
(define anthy-transpose-as-hiragana-key '("F6" "Muhenkan" "<IgnoreCase>l"))
(define anthy-transpose-as-hiragana-key? (make-key-predicate '("F6" "Muhenkan" "<IgnoreCase>l")))
(define anthy-transpose-as-katakana-key '("F7" "Muhenkan" "<IgnoreCase><Shift>l"))
(define anthy-transpose-as-katakana-key? (make-key-predicate '("F7" "Muhenkan" "<IgnoreCase><Shift>l")))
(define anthy-transpose-as-halfkana-key '("F8" "Muhenkan"))
(define anthy-transpose-as-halfkana-key? (make-key-predicate '("F8" "Muhenkan")))
(define anthy-transpose-as-halfwidth-alnum-key '("F10"))
(define anthy-transpose-as-halfwidth-alnum-key? (make-key-predicate '("F10")))
(define anthy-transpose-as-fullwidth-alnum-key '("F9"))
(define anthy-transpose-as-fullwidth-alnum-key? (make-key-predicate '("F9")))
(define anthy-commit-as-opposite-kana-key '())
(define anthy-commit-as-opposite-kana-key? (make-key-predicate '()))
