#!/usr/bin/env perl

use strict;
use warnings;

sub on_init {
    my ($self) = @_;
    my $term = $self;

    # $self->bind_action ("C-plus", "%:increase")
    #    or warn "unable to register 'C-plus' as font-size increase hotkey\n";
    # $self->bind_action ("C-minus", "%:decrease")
    #    or warn "unable to register 'C-minus' as font-size decrease hotkey\n";
    # $self->bind_action ("C-0", "%:reset")
    #    or warn "unable to register 'C-0' as font-size reset hotkey\n";
}

sub on_start
{
    my ($self) = @_;
    my $term = $self;

    # $self->{step} = $self->x_resource("%.step") || 1;

    # foreach my $type (qw(font boldFont italicFont boldItalicFont)) {
    #     $self->{$type} = $self->x_resource($type) || "undef";
    # }

}

sub on_action
{
    my ($self, $action) = @_;
    my $term = $self;

    # if($action eq "droid"){
    #   my $fn = "xft:Droid Sans Mono Dotted-10.2";
    #   # print '\033]710;' . $fn . '\033\\';
    #   set_font($self, $fn);
    # }elsif($action eq "dina"){
    #   my $fn = "xft:Dina-9";
    #   set_font($self, $fn);
    #   # print '\033]710;' . $fn . '\033\\';
    # }

    my $cmdstr = $action;
    # my $cmdstr = "11;#fff,4;0;#000,4;1;#400";

    my $a = "\033]", $b = "\007";

    $cmdstr =~ s/,/$b$a/g;
    $cmdstr = "$a$cmdstr$b";

    # my $debug = $cmdstr;
    # $debug =~ s/[^a-zA-Z0-9#]+/_/g;
    # print "$debug\n";

    $term->cmd_parse($cmdstr);
}
